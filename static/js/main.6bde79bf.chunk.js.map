{"version":3,"sources":["utils/constants.js","reducers/albums.js","reducers/artists.js","reducers/playlist.js","store/store.js","components/Header.js","components/Home.js","utils/functions.js","components/RedirectPage.js","utils/api.js","actions/result.js","images/music.jpeg","components/AlbumsList.js","components/ArtistsList.js","components/Playlist.js","components/SearchResult.js","components/SearchForm.js","components/Loader.js","components/Dashboard.js","components/PageNotFound.js","router/AppRouter.js","index.js"],"names":["SET_ALBUMS","ADD_ALBUMS","SET_ARTISTS","ADD_ARTISTS","SET_PLAYLIST","ADD_PLAYLIST","albumsReducer","state","action","albums","type","next","items","artistsReducer","artists","playlistReducer","playlists","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","playlist","applyMiddleware","thunk","Header","className","connect","props","process","REACT_APP_CLIENT_ID","REACT_APP_AUTHORIZE_URL","REACT_APP_REDIRECT_URL","Button","varient","onClick","location","setAuthHeader","params","JSON","parse","localStorage","getItem","axios","defaults","headers","common","access_token","error","console","log","RedirectPage","this","history","_","isEmpty","hash","push","slice","split","reduce","prev","curr","title","value","expiryTime","Date","getTime","expires_in","setItem","stringify","React","Component","get","url","a","result","data","setAlbums","setArtists","setPlayList","initiateLoadMoreAlbums","dispatch","initiateLoadMoreArtists","initiateLoadMorePlaylist","AlbumsList","Fragment","Object","keys","length","map","album","index","Card","style","width","target","href","external_urls","spotify","rel","images","src","music","alt","Img","variant","Body","Title","name","Text","artist","join","ArtistsList","PlayList","item","owner","display_name","SearchResult","isValidSession","loadMore","setCategory","selectedCategory","Playlist","to","pathname","session_expired","SearchForm","useState","searchTerm","setSearchTerm","errorMsg","setErrorMsg","Form","onSubmit","event","preventDefault","trim","handleSearch","Group","controlId","Label","Control","placeholder","onChange","autoComplete","Loader","document","createElement","node","loader","querySelector","useEffect","appendChild","classList","add","show","remove","body","ReactDOM","createPortal","children","isLoading","setIsLoading","setSelectedCategory","API_URL","encodeURIComponent","initiateGetResult","then","category","PageNotFound","AppRouter","setExpiryTime","setState","path","exact","render","component","getElementById"],"mappings":"iQAAaA,EAAa,aACbC,EAAa,aACbC,EAAc,cACdC,EAAc,cACdC,EAAe,eACfC,EAAe,eCabC,EAhBO,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAClCC,EAAWD,EAAXC,OACR,OAAQD,EAAOE,MACX,KAAKV,EACD,OAAOS,EACX,KAAKR,EACD,OAAO,2BACAM,GADP,IAEII,KAAMF,EAAOE,KACbC,MAAM,GAAD,mBAAML,EAAMK,OAAZ,YAAsBH,EAAOG,UAE1C,QACI,OAAOL,ICIJM,EAhBQ,WAAyB,IAAxBN,EAAuB,uDAAf,GAAIC,EAAW,uCACnCM,EAAYN,EAAZM,QACR,OAAQN,EAAOE,MACX,KAAKR,EACD,OAAOY,EACX,KAAKX,EACD,OAAO,2BACAI,GADP,IAEII,KAAMG,EAAQH,KACdC,MAAM,GAAD,mBAAML,EAAMK,OAAZ,YAAsBE,EAAQF,UAE3C,QACI,OAAOL,ICIJQ,EAhBS,WAAyB,IAAxBR,EAAuB,uDAAf,GAAIC,EAAW,uCACpCQ,EAAcR,EAAdQ,UACR,OAAQR,EAAOE,MACX,KAAKN,EACD,OAAOY,EACX,KAAKX,EACD,OAAO,2BACAE,GADP,IAEII,KAAMK,EAAUL,KAChBC,MAAM,GAAD,mBAAML,EAAMK,OAAZ,YAAsBI,EAAUJ,UAE7C,QACI,OAAOL,ICRbU,EAAmBC,OAAOC,sCAAwCC,IAWzDC,EATDC,YACVC,YAAgB,CACZd,OAAQH,EACRQ,QAASD,EACTW,SAAUT,IAEdE,EAAiBQ,YAAgBC,O,8DCRtBC,MAJf,WACI,OAAO,oBAAIC,UAAU,eAAd,uBCyBIC,iBAtBF,SAACC,GAEV,MAIIC,yWAHAC,EADJ,EACIA,oBACAC,EAFJ,EAEIA,wBACAC,EAHJ,EAGIA,uBAOJ,OACI,sBAAKN,UAAU,QAAf,UACI,cAAC,EAAD,IACA,cAACO,EAAA,EAAD,CAAQC,QAAQ,OAAO1B,KAAK,SAAS2B,QAPzB,WAChBnB,OAAOoB,SAAP,UAAqBL,EAArB,sBAA0DD,EAA1D,yBAA8FE,EAA9F,0CAMI,oC,yCCRCK,EAAgB,WACzB,IACI,IAAMC,EAASC,KAAKC,MAAMC,aAAaC,QAAQ,WAC3CJ,IACAK,IAAMC,SAASC,QAAQC,OAAvB,+BAEcR,EAAOS,eAE3B,MAAOC,GACLC,QAAQC,IAAI,qBAAsBF,KCnBrBG,E,uKACjB,WACI,MAA8BC,KAAKxB,MAA3ByB,EAAR,EAAQA,QAASjB,EAAjB,EAAiBA,SACjB,IACI,GAAIkB,IAAEC,QAAQnB,EAASoB,MACnB,OAAOH,EAAQI,KAAK,mCAExB,IAAMV,EAA8BX,EAASoB,KDNhDE,MAAM,GACNC,MAAM,KACNC,QAAO,SAACC,EAAMC,GACX,MAAuBA,EAAKH,MAAM,KAAlC,mBAAOI,EAAP,KAAcC,EAAd,KAEA,OADAH,EAAKE,GAASC,EACPH,IACR,ICCOI,GAAa,IAAIC,MAAOC,UAAsC,IAA1BpB,EAAaqB,WACvD3B,aAAa4B,QAAQ,SAAU9B,KAAK+B,UAAUvB,IAC9CN,aAAa4B,QAAQ,cAAeJ,GACpCZ,EAAQI,KAAK,mCACf,MAAOT,GACLK,EAAQI,KAAK,4B,oBAGrB,WACI,OAAO,S,GAjB2Bc,IAAMC,W,wBCAnCC,EAAG,uCAAG,WAAOC,EAAKpC,GAAZ,eAAAqC,EAAA,6DACftC,IADe,SAEMM,IAAM8B,IAAIC,EAAKpC,GAFrB,cAETsC,EAFS,yBAGRA,EAAOC,MAHC,2CAAH,wDCQHC,EAAY,SAAAvE,GAAM,MAAK,CAChCC,KAAMV,EACNS,WAMSwE,EAAa,SAACnE,GAAD,MAAc,CACpCJ,KAAMR,EACNY,YAMSoE,EAAc,SAAClE,GAAD,MAAgB,CACvCN,KAAMN,EACNY,cAwBSmE,EAAyB,SAACP,GACnC,8CAAO,WAAOQ,GAAP,eAAAP,EAAA,+EAEsBF,EAAIC,GAF1B,cAEOE,EAFP,yBAGQM,GA1CO3E,EA0CYqE,EAAOrE,OA1CP,CAClCC,KAAMT,EACNQ,aAqCO,gCAKC0C,QAAQC,IAAI,QAAZ,MALD,kCAvCc,IAAC3C,IAuCf,oBAAP,uDAUS4E,EAA0B,SAACT,GACpC,8CAAO,WAAOQ,GAAP,eAAAP,EAAA,+EAEsBF,EAAIC,GAF1B,cAEOE,EAFP,yBAGQM,GA7CQtE,EA6CYgE,EAAOhE,QA7CN,CACpCJ,KAAMP,EACNW,cAwCO,gCAKCqC,QAAQC,IAAI,QAAZ,MALD,kCA1Ce,IAACtC,IA0ChB,oBAAP,uDAUSwE,EAA2B,SAACV,GACrC,8CAAO,WAAOQ,GAAP,eAAAP,EAAA,+EAEsBF,EAAIC,GAF1B,cAEOE,EAFP,yBAGQM,GAhDSpE,EAgDY8D,EAAO9D,UAhDJ,CACvCN,KAAML,EACNW,gBA2CO,gCAKCmC,QAAQC,IAAI,QAAZ,MALD,kCA7CgB,IAACpC,IA6CjB,oBAAP,uD,QC5EW,MAA0B,mCCkD1BuE,EA3CI,SAAC,GAAgB,IAAd9E,EAAa,EAAbA,OAClB,OACI,cAAC,IAAM+E,SAAP,UACKC,OAAOC,KAAKjF,GAAQkF,OAAS,GAC1B,qBAAK/D,UAAU,SAAf,SACKnB,EAAOG,MAAMgF,KAAI,SAACC,EAAOC,GACtB,OACI,cAAC,IAAMN,SAAP,UACI,eAACO,EAAA,EAAD,CAAMnE,UAAU,YAAYoE,MAAO,CAAEC,MAAO,SAA5C,UACI,mBACIC,OAAO,SACPC,KAAMN,EAAMO,cAAcC,QAC1BC,IAAI,sBACJ1E,UAAU,kBAJd,SAMM4B,IAAEC,QAAQoC,EAAMU,QAOd,qBAAKC,IAAKC,EAAOC,IAAI,KANrB,cAACX,EAAA,EAAKY,IAAN,CACIC,QAAQ,MACRJ,IAAKX,EAAMU,OAAO,GAAG3B,IACrB8B,IAAI,OAMhB,eAACX,EAAA,EAAKc,KAAN,WACI,cAACd,EAAA,EAAKe,MAAN,UAAajB,EAAMkB,OACnB,cAAChB,EAAA,EAAKiB,KAAN,UACI,gCACKnB,EAAM/E,QAAQ8E,KAAI,SAACqB,GAAD,OAAYA,EAAOF,QAAMG,KAAK,iBAtBhDpB,WC8BlCqB,EAtCK,SAAC,GAAiB,IAAfrG,EAAc,EAAdA,QACnB,OACI,cAAC,IAAM0E,SAAP,UACKC,OAAOC,KAAK5E,GAAS6E,OAAS,GAC3B,qBAAK/D,UAAU,UAAf,SACKd,EAAQF,MAAMgF,KAAI,SAACqB,EAAQnB,GACxB,OACI,cAAC,IAAMN,SAAP,UACI,eAACO,EAAA,EAAD,CAAMnE,UAAU,YAAYoE,MAAO,CAAEC,MAAO,SAA5C,UACI,mBACIC,OAAO,SACPC,KAAMc,EAAOb,cAAcC,QAC3BC,IAAI,sBACJ1E,UAAU,kBAJd,SAMM4B,IAAEC,QAAQwD,EAAOV,QAOf,qBAAKC,IAAKC,EAAOC,IAAI,KANrB,cAACX,EAAA,EAAKY,IAAN,CACIC,QAAQ,MACRJ,IAAKS,EAAOV,OAAO,GAAG3B,IACtB8B,IAAI,OAMhB,cAACX,EAAA,EAAKc,KAAN,UACI,cAACd,EAAA,EAAKe,MAAN,UAAaG,EAAOF,aAnBXjB,WC+BlCsB,GArCE,SAAC,GAAkB,IAAhB5F,EAAe,EAAfA,SAChB,OACI,8BACKiE,OAAOC,KAAKlE,GAAUmE,OAAS,GAC5B,qBAAK/D,UAAU,WAAf,SACKJ,EAASZ,MAAMgF,KAAI,SAACyB,EAAMvB,GACvB,OACI,cAAC,IAAMN,SAAP,UACI,eAACO,EAAA,EAAD,CAAMnE,UAAU,YAAYoE,MAAO,CAAEC,MAAO,SAA5C,UACI,mBACIC,OAAO,SACPC,KAAMkB,EAAKjB,cAAcC,QACzBC,IAAI,sBACJ1E,UAAU,kBAJd,SAMM4B,IAAEC,QAAQ4D,EAAKd,QAGb,qBAAKC,IAAKC,EAAOC,IAAI,KAFrB,cAACX,EAAA,EAAKY,IAAN,CAAUC,QAAQ,MAAMJ,IAAKa,EAAKd,OAAO,GAAG3B,IAAK8B,IAAI,OAK7D,eAACX,EAAA,EAAKc,KAAN,WACI,cAACd,EAAA,EAAKe,MAAN,UAAaO,EAAKN,OAClB,cAAChB,EAAA,EAAKiB,KAAN,UACI,wCAAWK,EAAKC,MAAMC,yBAjBjBzB,WCqElC0B,GA3EM,SAAC1F,GAClB,IACI2F,EAKA3F,EALA2F,eACAC,EAIA5F,EAJA4F,SACA5C,EAGAhD,EAHAgD,OACA6C,EAEA7F,EAFA6F,YACAC,EACA9F,EADA8F,iBAEInH,EAA8BqE,EAA9BrE,OAAQK,EAAsBgE,EAAtBhE,QAASU,EAAasD,EAAbtD,SAEzB,OAAKiG,IAcD,eAAC,IAAMjC,SAAP,WACI,sBAAK5D,UAAU,iBAAf,WACM4B,IAAEC,QAAQhD,EAAOG,QACf,wBACIgB,UAAS,UAA0B,WAArBgG,EAAgC,aAAe,OAE7DvF,QAAS,kBAAMsF,EAAY,WAH/B,qBAQFnE,IAAEC,QAAQ3C,EAAQF,QAChB,wBACIgB,UAAS,UAA0B,YAArBgG,EAAiC,aAAe,OAE9DvF,QAAS,kBAAMsF,EAAY,YAH/B,sBAQFnE,IAAEC,QAAQjC,EAASZ,QACjB,wBACIgB,UAAS,UAA0B,aAArBgG,EAAkC,aAAe,OAE/DvF,QAAS,kBAAMsF,EAAY,aAH/B,0BASR,qBAAK/F,UAAS,UAA0B,WAArBgG,EAAgC,GAAK,QAAxD,SACKnH,GAAU,cAAC,EAAD,CAAYA,OAAQA,MAEnC,qBAAKmB,UAAS,UAA0B,YAArBgG,EAAiC,GAAK,QAAzD,SACK9G,GAAW,cAAC,EAAD,CAAaA,QAASA,MAEtC,qBAAKc,UAAS,UAA0B,aAArBgG,EAAkC,GAAK,QAA1D,SACKpG,GAAY,cAACqG,GAAD,CAAUrG,SAAUA,OAEnCgC,IAAEC,QAAQqB,EAAO8C,MACdpE,IAAEC,QAAQqB,EAAO8C,GAAkBjH,OAChC,qBAAKiB,UAAU,YAAYS,QAAS,kBAAMqF,EAASE,IAAnD,SACI,cAACzF,EAAA,EAAD,CAAQyE,QAAQ,OAAOlG,KAAK,SAA5B,4BAtDZ,cAAC,IAAD,CACIoH,GAAI,CACAC,SAAU,wBACVxH,MAAO,CACHyH,iBAAiB,O,SCmB1BC,I,MAvCI,SAACnG,GAChB,MAAoCoG,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAcA,OACI,8BACI,eAACC,GAAA,EAAD,CAAM3G,UAAU,YAAY4G,SAXf,SAACC,GAClBA,EAAMC,iBACoB,KAAtBP,EAAWQ,QACXL,EAAY,IACZxG,EAAM8G,aAAaT,IAEnBG,EAAY,gCAKZ,UACKD,GAAY,mBAAGzG,UAAU,WAAb,SAAyByG,IACtC,eAACE,GAAA,EAAKM,MAAN,CAAYC,UAAU,iBAAtB,UACI,cAACP,GAAA,EAAKQ,MAAN,gCACA,cAACR,GAAA,EAAKS,QAAN,CACIpH,UAAU,YACVlB,KAAK,SACLqG,KAAK,aACL7C,MAAOiE,EACPc,YAAY,wCACZC,SAzBM,SAACT,GACvB,IAAMN,EAAaM,EAAMvC,OAAOhC,MAChCkE,EAAcD,IAwBEgB,aAAa,WAGrB,cAAChH,EAAA,EAAD,CAAQP,UAAU,eAAegF,QAAQ,QAAQlG,KAAK,SAAtD,2BCbD0I,GApBA,SAACtH,GACZ,MAAeoG,mBAASmB,SAASC,cAAc,QAAxCC,EAAP,oBACMC,EAASH,SAASI,cAAc,WAgBtC,OAdAC,qBAAU,WACNF,EAAOG,YAAYJ,GAAMK,UAAUC,IAAI,aACxC,CAACL,EAAQD,IAEZG,qBAAU,WACF5H,EAAMgI,MACNN,EAAOI,UAAUG,OAAO,QACxBV,SAASW,KAAKJ,UAAUC,IAAI,iBAE5BL,EAAOI,UAAUC,IAAI,QACrBR,SAASW,KAAKJ,UAAUG,OAAO,kBAEpC,CAACP,EAAQ1H,EAAMgI,OAEXG,IAASC,aAAapI,EAAMqI,SAAUZ,ICuFlC1H,gBARS,SAACtB,GACrB,MAAO,CACHE,OAAQF,EAAME,OACdK,QAASP,EAAMO,QACfU,SAAUjB,EAAMiB,YAITK,EA7FG,SAACC,GACf,MAAkCoG,oBAAS,GAA3C,mBAAOkC,EAAP,KAAkBC,EAAlB,KACA,EAAgDnC,mBAAS,UAAzD,mBAAON,EAAP,KAAyB0C,EAAzB,KACQ7C,EAA4B3F,EAA5B2F,eAAgBlE,EAAYzB,EAAZyB,QAmBlBmE,EAAQ,uCAAG,WAAOhH,GAAP,qBAAAmE,EAAA,0DACT4C,IADS,iBAEDrC,EAAwCtD,EAAxCsD,SAAU3E,EAA8BqB,EAA9BrB,OAAQK,EAAsBgB,EAAtBhB,QAASU,EAAaM,EAAbN,SACnC6I,GAAa,GAHJ,KAID3J,EAJC,OAKA,WALA,OAQA,YARA,OAWA,aAXA,wCAMK0E,EAASD,EAAuB1E,EAAOE,OAN5C,2DASKyE,EAASC,EAAwBvE,EAAQH,OAT9C,6DAYKyE,EAASE,EAAyB9D,EAASb,OAZhD,4CAgBT0J,GAAa,GAhBJ,wBAkBT9G,EAAQI,KAAK,CACToE,SAAU,IACVxH,MAAO,CACHyH,iBAAiB,KArBhB,4CAAH,sDAgCRlD,EAAS,CAAErE,OADqBqB,EAA9BrB,OACiBK,QADagB,EAAtBhB,QACkBU,SADIM,EAAbN,UAGzB,OACI,cAAC,IAAMgE,SAAP,UACKiC,IACG,gCACI,cAAC,EAAD,IACA,cAAC,GAAD,CAAYmB,aAxDP,SAACT,GACdV,KACA4C,GAAa,GACbvI,EAAMsD,SRYe,SAAC+C,GAC9B,8CAAO,WAAO/C,GAAP,uBAAAP,EAAA,sEAEO0F,EAFP,kDAE4DC,mBACvDrC,GAHL,wCAKsBxD,EAAI4F,GAL1B,cAKOzF,EALP,OAMC3B,QAAQC,IAAI0B,GACJrE,EAA+BqE,EAA/BrE,OAAQK,EAAuBgE,EAAvBhE,QAASE,EAAc8D,EAAd9D,UACzBoE,EAASJ,EAAUvE,IACnB2E,EAASH,EAAWnE,IATrB,kBAUQsE,EAASF,EAAYlE,KAV7B,kCAYCmC,QAAQC,IAAI,QAAZ,MAZD,0DAAP,sDQbuBqH,CAAkBtC,IAAauC,MAAK,WAC/CL,GAAa,GACbC,EAAoB,cAGxB/G,EAAQI,KAAK,CACToE,SAAU,wBACVxH,MAAO,CACHyH,iBAAiB,QA8CjB,cAAC,GAAD,CAAQ8B,KAAMM,EAAd,wBACA,cAAC,GAAD,CACItF,OAAQA,EACR4C,SAAUA,EACVC,YAjBA,SAACgD,GACjBL,EAAoBK,IAiBJ/C,iBAAkBA,EAClBH,eAAgBA,OAIxB,cAAC,IAAD,CACIK,GAAI,CACAC,SAAU,IACVxH,MAAO,CACHyH,iBAAiB,WC9E9B4C,OATf,WACI,OACI,eAAC,IAAMpF,SAAP,WACI,cAAC,EAAD,IADJ,yBAE0B,cAAC,IAAD,CAAMsC,GAAG,kCAAT,2BC8DnB+C,G,4MA9DXtK,MAAQ,CACJ4D,WAAY,K,EAahB2G,cAAgB,SAAC3G,GACb,EAAK4G,SAAS,CAAE5G,gB,EAGpBsD,eAAiB,WAKb,OAJoB,IAAIrD,MAAOC,UACZ,EAAK9D,MAAM4D,Y,uDAhBlC,WACI,IAAIA,EACJ,IACIA,EAAa1B,KAAKC,MAAMC,aAAaC,QAAQ,gBAC/C,MAAOM,GACLiB,EAAa,IAEjBb,KAAKyH,SAAS,CAAE5G,iB,oBAepB,WAAU,IAAD,OACL,OACI,cAAC,IAAD,UACI,qBAAKvC,UAAU,OAAf,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CACIoJ,KAAK,wBACLC,OAAO,EACPC,OAAQ,SAACpJ,GAAD,OACJ,cAAC,EAAD,aAAM2F,eAAgB,EAAKA,gBAAoB3F,OAGvD,cAAC,IAAD,CACIkJ,KAAK,iCACLE,OAAQ,SAACpJ,GAAD,OACJ,cAAC,EAAD,aACI2F,eAAgB,EAAKA,eACrBqD,cAAe,EAAKA,eAChBhJ,OAIhB,cAAC,IAAD,CACIkJ,KAAK,kCACLE,OAAQ,SAACpJ,GAAD,OACJ,cAAC,GAAD,aAAW2F,eAAgB,EAAKA,gBAAoB3F,OAG5D,cAAC,IAAD,CAAOqJ,UAAWP,gB,GAvDlBnG,IAAMC,W,YCC9BuF,IAASiB,OACL,cAAC,IAAD,CAAU7J,MAAOA,EAAjB,SACI,cAAC,GAAD,MAEJgI,SAAS+B,eAAe,W","file":"static/js/main.6bde79bf.chunk.js","sourcesContent":["export const SET_ALBUMS = 'SET_ALBUMS'\r\nexport const ADD_ALBUMS = 'ADD_ALBUMS'\r\nexport const SET_ARTISTS = 'SET_ARTISTS'\r\nexport const ADD_ARTISTS = 'ADD_ARTISTS'\r\nexport const SET_PLAYLIST = 'SET_PLAYLIST'\r\nexport const ADD_PLAYLIST = 'ADD_PLAYLIST'","import { SET_ALBUMS, ADD_ALBUMS } from '../utils/constants';\r\n\r\nconst albumsReducer = (state = {}, action) => {\r\n    const { albums } = action;\r\n    switch (action.type) {\r\n        case SET_ALBUMS:\r\n            return albums;\r\n        case ADD_ALBUMS:\r\n            return {\r\n                ...state,\r\n                next: albums.next,\r\n                items: [...state.items, ...albums.items]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default albumsReducer;","import { SET_ARTISTS, ADD_ARTISTS } from '../utils/constants';\r\n\r\nconst artistsReducer = (state = {}, action) => {\r\n    const { artists } = action;\r\n    switch (action.type) {\r\n        case SET_ARTISTS:\r\n            return artists;\r\n        case ADD_ARTISTS:\r\n            return {\r\n                ...state,\r\n                next: artists.next,\r\n                items: [...state.items, ...artists.items]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default artistsReducer;","import { SET_PLAYLIST, ADD_PLAYLIST } from '../utils/constants';\r\n\r\nconst playlistReducer = (state = {}, action) => {\r\n    const { playlists } = action;\r\n    switch (action.type) {\r\n        case SET_PLAYLIST:\r\n            return playlists;\r\n        case ADD_PLAYLIST:\r\n            return {\r\n                ...state,\r\n                next: playlists.next,\r\n                items: [...state.items, ...playlists.items]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default playlistReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport albumsReducer from '../reducers/albums'\r\nimport artistsReducer from '../reducers/artists'\r\nimport playlistReducer from '../reducers/playlist'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(\r\n    combineReducers({\r\n        albums: albumsReducer,\r\n        artists: artistsReducer,\r\n        playlist: playlistReducer\r\n    }),\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)\r\n\r\nexport default store","import React from 'react';\r\n\r\nfunction Header() {\r\n    return <h1 className=\"main-heading\">Ear Full</h1>\r\n};\r\n\r\nexport default Header;","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Button } from 'react-bootstrap'\r\nimport Header from './Header'\r\n\r\n\r\nconst Home = (props) => {\r\n\r\n    const {\r\n        REACT_APP_CLIENT_ID,\r\n        REACT_APP_AUTHORIZE_URL,\r\n        REACT_APP_REDIRECT_URL\r\n    } = process.env;\r\n\r\n    const handleLogin = () => {\r\n        window.location = `${REACT_APP_AUTHORIZE_URL}?client_id=${REACT_APP_CLIENT_ID}&redirect_uri=${REACT_APP_REDIRECT_URL}&response_type=token&show_dialog=true`;\r\n    };\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <Header />\r\n            <Button varient=\"info\" type=\"submit\" onClick={handleLogin}>\r\n                Login to Spotify\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default connect()(Home)","import axios from 'axios'\r\n\r\nexport const getParamValues = url => {\r\n    return url\r\n        .slice(1)\r\n        .split('&')\r\n        .reduce((prev, curr) => {\r\n            const [title, value] = curr.split('=');\r\n            prev[title] = value;\r\n            return prev\r\n        }, {});\r\n}\r\n\r\nexport const setAuthHeader = () => {\r\n    try {\r\n        const params = JSON.parse(localStorage.getItem('params'));\r\n        if (params) {\r\n            axios.defaults.headers.common[\r\n                'Authorization'\r\n            ] = `Bearer ${params.access_token}`;\r\n        }\r\n    } catch (error) {\r\n        console.log('Error setting auth', error);\r\n    }\r\n}","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { getParamValues } from '../utils/functions';\r\nexport default class RedirectPage extends React.Component {\r\n    componentDidMount() {\r\n        const { history, location } = this.props;\r\n        try {\r\n            if (_.isEmpty(location.hash)) {\r\n                return history.push('/spotify-music-search/dashboard');\r\n            }\r\n            const access_token = getParamValues(location.hash);\r\n            const expiryTime = new Date().getTime() + access_token.expires_in * 1000;\r\n            localStorage.setItem('params', JSON.stringify(access_token));\r\n            localStorage.setItem('expiry_time', expiryTime);\r\n            history.push('/spotify-music-search/dashboard');\r\n        } catch (error) {\r\n            history.push('/spotify-music-search');\r\n        }\r\n    }\r\n    render() {\r\n        return null;\r\n    }\r\n}\r\n","import axios from 'axios'\r\nimport { setAuthHeader } from './functions'\r\n\r\nexport const get = async (url, params) => {\r\n    setAuthHeader()\r\n    const result = await axios.get(url, params)\r\n    return result.data\r\n}\r\n\r\n\r\nexport const post = async (url, params) => {\r\n    setAuthHeader()\r\n    const result = await axios.post(url, params)\r\n    return result.data\r\n}","import {\r\n    SET_ALBUMS,\r\n    ADD_ALBUMS,\r\n    SET_ARTISTS,\r\n    ADD_ARTISTS,\r\n    SET_PLAYLIST,\r\n    ADD_PLAYLIST\r\n} from '../utils/constants'\r\n\r\nimport { get } from '../utils/api'\r\n\r\nexport const setAlbums = albums => ({\r\n    type: SET_ALBUMS,\r\n    albums\r\n})\r\nexport const addAlbums = (albums) => ({\r\n    type: ADD_ALBUMS,\r\n    albums\r\n})\r\nexport const setArtists = (artists) => ({\r\n    type: SET_ARTISTS,\r\n    artists\r\n})\r\nexport const addArtists = (artists) => ({\r\n    type: ADD_ARTISTS,\r\n    artists\r\n})\r\nexport const setPlayList = (playlists) => ({\r\n    type: SET_PLAYLIST,\r\n    playlists\r\n})\r\nexport const addPlaylist = (playlists) => ({\r\n    type: ADD_PLAYLIST,\r\n    playlists\r\n})\r\nexport const initiateGetResult = (searchTerm) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const API_URL = `https://api.spotify.com/v1/search?query=${encodeURIComponent(\r\n                searchTerm\r\n            )}&type=album,playlist,artist`;\r\n            const result = await get(API_URL);\r\n            console.log(result);\r\n            const { albums, artists, playlists } = result;\r\n            dispatch(setAlbums(albums));\r\n            dispatch(setArtists(artists));\r\n            return dispatch(setPlayList(playlists));\r\n        } catch (error) {\r\n            console.log('error', error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const initiateLoadMoreAlbums = (url) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = await get(url);\r\n            return dispatch(addAlbums(result.albums));\r\n        } catch (error) {\r\n            console.log('error', error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const initiateLoadMoreArtists = (url) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = await get(url);\r\n            return dispatch(addArtists(result.artists));\r\n        } catch (error) {\r\n            console.log('error', error);\r\n        }\r\n    };\r\n};\r\n\r\nexport const initiateLoadMorePlaylist = (url) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const result = await get(url);\r\n            return dispatch(addPlaylist(result.playlists));\r\n        } catch (error) {\r\n            console.log('error', error);\r\n        }\r\n    };\r\n};","export default __webpack_public_path__ + \"static/media/music.b2fe7d4d.jpeg\";","import React from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport _ from 'lodash'\r\nimport music from '../images/music.jpeg'\r\n\r\n\r\n\r\nconst AlbumsList = ({ albums }) => {\r\n    return (\r\n        <React.Fragment>\r\n            {Object.keys(albums).length > 0 && (\r\n                <div className=\"albums\">\r\n                    {albums.items.map((album, index) => {\r\n                        return (\r\n                            <React.Fragment key={index}>\r\n                                <Card className=\"cardStyle\" style={{ width: '18rem' }}>\r\n                                    <a\r\n                                        target=\"_blank\"\r\n                                        href={album.external_urls.spotify}\r\n                                        rel=\"noopener noreferrer\"\r\n                                        className=\"card-image-link\"\r\n                                    >\r\n                                        {!_.isEmpty(album.images) ? (\r\n                                            <Card.Img\r\n                                                variant=\"top\"\r\n                                                src={album.images[0].url}\r\n                                                alt=\"\"\r\n                                            />\r\n                                        ) : (\r\n                                            <img src={music} alt=\"\" />\r\n                                        )}\r\n                                    </a>\r\n                                    <Card.Body>\r\n                                        <Card.Title>{album.name}</Card.Title>\r\n                                        <Card.Text>\r\n                                            <small>\r\n                                                {album.artists.map((artist) => artist.name).join(', ')}\r\n                                            </small>\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </React.Fragment>\r\n                        )\r\n                    })}\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default AlbumsList","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\n\r\n\r\nconst ArtistsList = ({ artists }) => {\r\n    return (\r\n        <React.Fragment>\r\n            {Object.keys(artists).length > 0 && (\r\n                <div className=\"artists\">\r\n                    {artists.items.map((artist, index) => {\r\n                        return (\r\n                            <React.Fragment key={index}>\r\n                                <Card className=\"cardStyle\" style={{ width: '18rem' }}>\r\n                                    <a\r\n                                        target=\"_blank\"\r\n                                        href={artist.external_urls.spotify}\r\n                                        rel=\"noopener noreferrer\"\r\n                                        className=\"card-image-link\"\r\n                                    >\r\n                                        {!_.isEmpty(artist.images) ? (\r\n                                            <Card.Img\r\n                                                variant=\"top\"\r\n                                                src={artist.images[0].url}\r\n                                                alt=\"\"\r\n                                            />\r\n                                        ) : (\r\n                                            <img src={music} alt=\"\" />\r\n                                        )}\r\n                                    </a>\r\n                                    <Card.Body>\r\n                                        <Card.Title>{artist.name}</Card.Title>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </React.Fragment>\r\n                        );\r\n                    })}\r\n                </div>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ArtistsList;\r\n","import React from 'react';\r\nimport { Card } from 'react-bootstrap';\r\nimport _ from 'lodash';\r\nimport music from '../images/music.jpeg';\r\n\r\n\r\n\r\nconst PlayList = ({ playlist }) => {\r\n    return (\r\n        <div>\r\n            {Object.keys(playlist).length > 0 && (\r\n                <div className=\"playlist\">\r\n                    {playlist.items.map((item, index) => {\r\n                        return (\r\n                            <React.Fragment key={index}>\r\n                                <Card className=\"cardStyle\" style={{ width: '18rem' }}>\r\n                                    <a\r\n                                        target=\"_blank\"\r\n                                        href={item.external_urls.spotify}\r\n                                        rel=\"noopener noreferrer\"\r\n                                        className=\"card-image-link\"\r\n                                    >\r\n                                        {!_.isEmpty(item.images) ? (\r\n                                            <Card.Img variant=\"top\" src={item.images[0].url} alt=\"\" />\r\n                                        ) : (\r\n                                            <img src={music} alt=\"\" />\r\n                                        )}\r\n                                    </a>\r\n                                    <Card.Body>\r\n                                        <Card.Title>{item.name}</Card.Title>\r\n                                        <Card.Text>\r\n                                            <small>By {item.owner.display_name}</small>\r\n                                        </Card.Text>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </React.Fragment>\r\n                        );\r\n                    })}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PlayList;","import React from 'react';\r\nimport _ from 'lodash';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Redirect } from 'react-router-dom';\r\nimport AlbumsList from './AlbumsList';\r\nimport ArtistsList from './ArtistsList';\r\nimport Playlist from './Playlist';\r\n\r\nconst SearchResult = (props) => {\r\n    const {\r\n        isValidSession,\r\n        loadMore,\r\n        result,\r\n        setCategory,\r\n        selectedCategory\r\n    } = props;\r\n    const { albums, artists, playlist } = result;\r\n\r\n    if (!isValidSession()) {\r\n        return (\r\n            <Redirect\r\n                to={{\r\n                    pathname: '/spotify-music-search',\r\n                    state: {\r\n                        session_expired: true\r\n                    }\r\n                }}\r\n            />\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"search-buttons\">\r\n                {!_.isEmpty(albums.items) && (\r\n                    <button\r\n                        className={`${selectedCategory === 'albums' ? 'btn active' : 'btn'\r\n                            }`}\r\n                        onClick={() => setCategory('albums')}\r\n                    >\r\n                        Albums\r\n                    </button>\r\n                )}\r\n                {!_.isEmpty(artists.items) && (\r\n                    <button\r\n                        className={`${selectedCategory === 'artists' ? 'btn active' : 'btn'\r\n                            }`}\r\n                        onClick={() => setCategory('artists')}\r\n                    >\r\n                        Artists\r\n                    </button>\r\n                )}\r\n                {!_.isEmpty(playlist.items) && (\r\n                    <button\r\n                        className={`${selectedCategory === 'playlist' ? 'btn active' : 'btn'\r\n                            }`}\r\n                        onClick={() => setCategory('playlist')}\r\n                    >\r\n                        PlayLists\r\n                    </button>\r\n                )}\r\n            </div>\r\n            <div className={`${selectedCategory === 'albums' ? '' : 'hide'}`}>\r\n                {albums && <AlbumsList albums={albums} />}\r\n            </div>\r\n            <div className={`${selectedCategory === 'artists' ? '' : 'hide'}`}>\r\n                {artists && <ArtistsList artists={artists} />}\r\n            </div>\r\n            <div className={`${selectedCategory === 'playlist' ? '' : 'hide'}`}>\r\n                {playlist && <Playlist playlist={playlist} />}\r\n            </div>\r\n            {!_.isEmpty(result[selectedCategory]) &&\r\n                !_.isEmpty(result[selectedCategory].next) && (\r\n                    <div className=\"load-more\" onClick={() => loadMore(selectedCategory)}>\r\n                        <Button variant=\"info\" type=\"button\">\r\n                            Load More\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default SearchResult;","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport './SearchForm.css'\r\n\r\nconst SearchForm = (props) => {\r\n    const [searchTerm, setSearchTerm] = useState('');\r\n    const [errorMsg, setErrorMsg] = useState('');\r\n    const handleInputChange = (event) => {\r\n        const searchTerm = event.target.value;\r\n        setSearchTerm(searchTerm);\r\n    };\r\n    const handleSearch = (event) => {\r\n        event.preventDefault();\r\n        if (searchTerm.trim() !== '') {\r\n            setErrorMsg('');\r\n            props.handleSearch(searchTerm);\r\n        } else {\r\n            setErrorMsg('Please enter a search term.');\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <Form className=\"searchBar\" onSubmit={handleSearch}>\r\n                {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\r\n                <Form.Group controlId=\"formBasicEmail\">\r\n                    <Form.Label>Enter search term</Form.Label>\r\n                    <Form.Control\r\n                        className=\"textInput\"\r\n                        type=\"search\"\r\n                        name=\"searchTerm\"\r\n                        value={searchTerm}\r\n                        placeholder=\"Search for album, artist, or playlist\"\r\n                        onChange={handleInputChange}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </Form.Group>\r\n                <Button className=\"searchButton\" variant=\"light\" type=\"submit\">\r\n                    Search\r\n                </Button>\r\n            </Form>\r\n        </div>\r\n    );\r\n};\r\nexport default SearchForm;","import { useState, useEffect } from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nconst Loader = (props) => {\r\n    const [node] = useState(document.createElement('div'))\r\n    const loader = document.querySelector('#loader')\r\n\r\n    useEffect(() => {\r\n        loader.appendChild(node).classList.add('message')\r\n    }, [loader, node])\r\n\r\n    useEffect(() => {\r\n        if (props.show) {\r\n            loader.classList.remove('hide')\r\n            document.body.classList.add('loader-open')\r\n        } else {\r\n            loader.classList.add('hide')\r\n            document.body.classList.remove('loader-open')\r\n        }\r\n    }, [loader, props.show])\r\n\r\n    return ReactDOM.createPortal(props.children, node)\r\n};\r\nexport default Loader","import React, { useState } from 'react';\r\n\r\nimport {\r\n    initiateGetResult,\r\n    initiateLoadMoreAlbums,\r\n    initiateLoadMorePlaylist,\r\n    initiateLoadMoreArtists\r\n} from '../actions/result';\r\nimport { connect } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport SearchResult from './SearchResult';\r\nimport SearchForm from './SearchForm';\r\nimport Header from './Header';\r\nimport Loader from './Loader';\r\n\r\nconst Dashboard = (props) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [selectedCategory, setSelectedCategory] = useState('albums');\r\n    const { isValidSession, history } = props;\r\n\r\n    const handleSearch = (searchTerm) => {\r\n        if (isValidSession()) {\r\n            setIsLoading(true);\r\n            props.dispatch(initiateGetResult(searchTerm)).then(() => {\r\n                setIsLoading(false);\r\n                setSelectedCategory('albums');\r\n            });\r\n        } else {\r\n            history.push({\r\n                pathname: '/spotify-music-search',\r\n                state: {\r\n                    session_expired: true\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const loadMore = async (type) => {\r\n        if (isValidSession()) {\r\n            const { dispatch, albums, artists, playlist } = props;\r\n            setIsLoading(true);\r\n            switch (type) {\r\n                case 'albums':\r\n                    await dispatch(initiateLoadMoreAlbums(albums.next));\r\n                    break;\r\n                case 'artists':\r\n                    await dispatch(initiateLoadMoreArtists(artists.next));\r\n                    break;\r\n                case 'playlist':\r\n                    await dispatch(initiateLoadMorePlaylist(playlist.next));\r\n                    break;\r\n                default:\r\n            }\r\n            setIsLoading(false);\r\n        } else {\r\n            history.push({\r\n                pathname: '/',\r\n                state: {\r\n                    session_expired: true\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const setCategory = (category) => {\r\n        setSelectedCategory(category);\r\n    };\r\n\r\n    const { albums, artists, playlist } = props;\r\n    const result = { albums, artists, playlist };\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {isValidSession() ? (\r\n                <div>\r\n                    <Header />\r\n                    <SearchForm handleSearch={handleSearch} />\r\n                    <Loader show={isLoading}>Loading...</Loader>\r\n                    <SearchResult\r\n                        result={result}\r\n                        loadMore={loadMore}\r\n                        setCategory={setCategory}\r\n                        selectedCategory={selectedCategory}\r\n                        isValidSession={isValidSession}\r\n                    />\r\n                </div>\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: '/',\r\n                        state: {\r\n                            session_expired: true\r\n                        }\r\n                    }}\r\n                />\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        albums: state.albums,\r\n        artists: state.artists,\r\n        playlist: state.playlist\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Header from './Header'\r\n\r\nfunction PageNotFound() {\r\n    return (\r\n        <React.Fragment>\r\n            <Header />\r\n            Page not found. Go to <Link to=\"/spotify-music-search/dashboard\">Home Page</Link>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default PageNotFound","import React from 'react'\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Home from '../components/Home'\r\nimport RedirectPage from '../components/RedirectPage'\r\nimport Dashboard from '../components/Dashboard'\r\nimport PageNotFound from '../components/PageNotFound'\r\n\r\nclass AppRouter extends React.Component {\r\n    state = {\r\n        expiryTime: '0'\r\n    };\r\n\r\n    componentDidMount() {\r\n        let expiryTime;\r\n        try {\r\n            expiryTime = JSON.parse(localStorage.getItem('expiry_time'));\r\n        } catch (error) {\r\n            expiryTime = '0';\r\n        }\r\n        this.setState({ expiryTime });\r\n    }\r\n\r\n    setExpiryTime = (expiryTime) => {\r\n        this.setState({ expiryTime });\r\n    };\r\n\r\n    isValidSession = () => {\r\n        const currentTime = new Date().getTime();\r\n        const expiryTime = this.state.expiryTime;\r\n        const isSessionValid = currentTime < expiryTime;\r\n\r\n        return isSessionValid;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <div className=\"main\">\r\n                    <Switch>\r\n                        <Route\r\n                            path=\"/spotify-music-search\"\r\n                            exact={true}\r\n                            render={(props) => (\r\n                                <Home isValidSession={this.isValidSession} {...props} />\r\n                            )}\r\n                        />\r\n                        <Route\r\n                            path=\"/spotify-music-search/redirect\"\r\n                            render={(props) => (\r\n                                <RedirectPage\r\n                                    isValidSession={this.isValidSession}\r\n                                    setExpiryTime={this.setExpiryTime}\r\n                                    {...props}\r\n                                />\r\n                            )}\r\n                        />\r\n                        <Route\r\n                            path=\"/spotify-music-search/dashboard\"\r\n                            render={(props) => (\r\n                                <Dashboard isValidSession={this.isValidSession} {...props} />\r\n                            )}\r\n                        />\r\n                        <Route component={PageNotFound} />\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AppRouter;","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport store from './store/store'\r\nimport AppRouter from './router/AppRouter'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './styles.css'\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <AppRouter />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n)"],"sourceRoot":""}