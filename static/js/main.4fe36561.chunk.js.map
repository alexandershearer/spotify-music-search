{"version":3,"sources":["utils/constants.js","reducers/albums.js","reducers/artists.js","reducers/playlist.js","store/store.js","components/Header.js","components/Home.js","utils/functions.js","components/RedirectPage.js","utils/api.js","actions/result.js","images/music.jpeg","components/AlbumsList.js","components/ArtistsList.js","components/PlayList.js","components/SearchResult.js","components/SearchForm.js","components/Loader.js","components/Dashboard.js","components/PageNotFound.js","router/AppRouter.js","index.js"],"names":["SET_ALBUMS","ADD_ALBUMS","SET_ARTISTS","ADD_ARTISTS","SET_PLAYLIST","ADD_PLAYLIST","albumsReducer","state","action","albums","type","next","items","artistsReducer","artists","playlistReducer","playlists","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","playlist","applyMiddleware","thunk","Header","className","connect","props","process","REACT_APP_CLIENT_ID","REACT_APP_AUTHORIZE_URL","REACT_APP_REDIRECT_URL","Button","varient","onClick","location","setAuthHeader","params","JSON","parse","localStorage","getItem","axios","defaults","headers","common","access_token","error","console","log","RedirectPage","this","history","setExpiryTime","_","isEmpty","hash","push","slice","split","reduce","prev","curr","title","value","expiryTime","Date","getTime","expires_in","setItem","stringify","React","Component","get","url","a","result","data","setAlbums","setArtists","setPlayList","initiateLoadMoreAlbums","dispatch","initiateLoadMoreArtists","initiateLoadMorePlaylist","AlbumsList","Fragment","Object","keys","length","map","album","index","Card","style","width","target","href","external_urls","spotify","rel","images","src","music","alt","Img","variant","Body","Title","name","Text","artist","join","ArtistsList","PlayList","item","owner","display_name","SearchResult","isValidSession","loadMore","setCategory","selectedCategory","to","pathname","session_expired","SearchForm","useState","searchTerm","setSearchTerm","errorMsg","setErrorMsg","Form","onSubmit","event","preventDefault","trim","handleSearch","Group","controlId","Label","Control","placeholder","onChange","autoComplete","Loader","document","createElement","node","loader","querySelector","useEffect","appendChild","classList","add","show","remove","body","ReactDOM","createPortal","children","isLoading","setIsLoading","setSelectedCategory","API_URL","encodeURIComponent","initiateGetResult","then","category","PageNotFound","AppRouter","setState","path","exact","render","component","getElementById"],"mappings":"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","file":"static/js/main.4fe36561.chunk.js","sourcesContent":["export const SET_ALBUMS = 'SET_ALBUMS'\nexport const ADD_ALBUMS = 'ADD_ALBUMS'\nexport const SET_ARTISTS = 'SET_ARTISTS'\nexport const ADD_ARTISTS = 'ADD_ARTISTS'\nexport const SET_PLAYLIST = 'SET_PLAYLIST'\nexport const ADD_PLAYLIST = 'ADD_PLAYLIST'","import { SET_ALBUMS, ADD_ALBUMS } from '../utils/constants';\n\nconst albumsReducer = (state = {}, action) => {\n    const { albums } = action;\n    switch (action.type) {\n        case SET_ALBUMS:\n            return albums;\n        case ADD_ALBUMS:\n            return {\n                ...state,\n                next: albums.next,\n                items: [...state.items, ...albums.items]\n            };\n        default:\n            return state;\n    }\n};\n\nexport default albumsReducer;","import { SET_ARTISTS, ADD_ARTISTS } from '../utils/constants';\n\nconst artistsReducer = (state = {}, action) => {\n    const { artists } = action;\n    switch (action.type) {\n        case SET_ARTISTS:\n            return artists;\n        case ADD_ARTISTS:\n            return {\n                ...state,\n                next: artists.next,\n                items: [...state.items, ...artists.items]\n            };\n        default:\n            return state;\n    }\n};\n\nexport default artistsReducer;","import { SET_PLAYLIST, ADD_PLAYLIST } from '../utils/constants';\n\nconst playlistReducer = (state = {}, action) => {\n    const { playlists } = action;\n    switch (action.type) {\n        case SET_PLAYLIST:\n            return playlists;\n        case ADD_PLAYLIST:\n            return {\n                ...state,\n                next: playlists.next,\n                items: [...state.items, ...playlists.items]\n            };\n        default:\n            return state;\n    }\n};\n\nexport default playlistReducer;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport albumsReducer from '../reducers/albums'\nimport artistsReducer from '../reducers/artists'\nimport playlistReducer from '../reducers/playlist'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    combineReducers({\n        albums: albumsReducer,\n        artists: artistsReducer,\n        playlist: playlistReducer\n    }),\n    composeEnhancers(applyMiddleware(thunk))\n)\n\nexport default store","import React from 'react';\n\nfunction Header() {\n    return <h1 className=\"main-heading\">Ear Full</h1>\n};\n\nexport default Header;","import React from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'react-bootstrap'\nimport Header from './Header'\n\n\nconst Home = (props) => {\n\n    const {\n        REACT_APP_CLIENT_ID,\n        REACT_APP_AUTHORIZE_URL,\n        REACT_APP_REDIRECT_URL\n    } = process.env;\n\n    const handleLogin = () => {\n        window.location = `${REACT_APP_AUTHORIZE_URL}?client_id=${REACT_APP_CLIENT_ID}&redirect_uri=${REACT_APP_REDIRECT_URL}&response_type=token&show_dialog=true`;\n    };\n\n    return (\n        <div className=\"login\">\n            <Header />\n            <Button varient=\"info\" type=\"submit\" onClick={handleLogin}>\n                Login to Spotify\n            </Button>\n        </div>\n    )\n}\n\nexport default connect()(Home)","import axios from 'axios'\n\nexport const getParamValues = url => {\n    return url\n        .slice(1)\n        .split('&')\n        .reduce((prev, curr) => {\n            const [title, value] = curr.split('=');\n            prev[title] = value;\n            return prev\n        }, {});\n}\n\nexport const setAuthHeader = () => {\n    try {\n        const params = JSON.parse(localStorage.getItem('params'));\n        if (params) {\n            axios.defaults.headers.common[\n                'Authorization'\n            ] = `Bearer ${params.access_token}`;\n        }\n    } catch (error) {\n        console.log('Error setting auth', error);\n    }\n}","import React from 'react';\nimport _ from 'lodash';\nimport { getParamValues } from '../utils/functions';\nexport default class RedirectPage extends React.Component {\n    componentDidMount() {\n        const { setExpiryTime, history, location } = this.props;\n        try {\n            if (_.isEmpty(location.hash)) {\n                return history.push('/spotify-music-search/dashboard');\n            }\n            const access_token = getParamValues(location.hash);\n            const expiryTime = new Date().getTime() + access_token.expires_in * 1000;\n            localStorage.setItem('params', JSON.stringify(access_token));\n            localStorage.setItem('expiry_time', expiryTime);\n            history.push('/spotify-music-search/dashboard');\n        } catch (error) {\n            history.push('/');\n        }\n    }\n    render() {\n        return null;\n    }\n}\n","import axios from 'axios'\nimport { setAuthHeader } from './functions'\n\nexport const get = async (url, params) => {\n    setAuthHeader()\n    const result = await axios.get(url, params)\n    return result.data\n}\n\n\nexport const post = async (url, params) => {\n    setAuthHeader()\n    const result = await axios.post(url, params)\n    return result.data\n}","import {\n    SET_ALBUMS,\n    ADD_ALBUMS,\n    SET_ARTISTS,\n    ADD_ARTISTS,\n    SET_PLAYLIST,\n    ADD_PLAYLIST\n} from '../utils/constants'\n\nimport { get } from '../utils/api'\n\nexport const setAlbums = albums => ({\n    type: SET_ALBUMS,\n    albums\n})\nexport const addAlbums = (albums) => ({\n    type: ADD_ALBUMS,\n    albums\n})\nexport const setArtists = (artists) => ({\n    type: SET_ARTISTS,\n    artists\n})\nexport const addArtists = (artists) => ({\n    type: ADD_ARTISTS,\n    artists\n})\nexport const setPlayList = (playlists) => ({\n    type: SET_PLAYLIST,\n    playlists\n})\nexport const addPlaylist = (playlists) => ({\n    type: ADD_PLAYLIST,\n    playlists\n})\nexport const initiateGetResult = (searchTerm) => {\n    return async (dispatch) => {\n        try {\n            const API_URL = `https://api.spotify.com/v1/search?query=${encodeURIComponent(\n                searchTerm\n            )}&type=album,playlist,artist`;\n            const result = await get(API_URL);\n            console.log(result);\n            const { albums, artists, playlists } = result;\n            dispatch(setAlbums(albums));\n            dispatch(setArtists(artists));\n            return dispatch(setPlayList(playlists));\n        } catch (error) {\n            console.log('error', error);\n        }\n    };\n};\n\nexport const initiateLoadMoreAlbums = (url) => {\n    return async (dispatch) => {\n        try {\n            const result = await get(url);\n            return dispatch(addAlbums(result.albums));\n        } catch (error) {\n            console.log('error', error);\n        }\n    };\n};\n\nexport const initiateLoadMoreArtists = (url) => {\n    return async (dispatch) => {\n        try {\n            const result = await get(url);\n            return dispatch(addArtists(result.artists));\n        } catch (error) {\n            console.log('error', error);\n        }\n    };\n};\n\nexport const initiateLoadMorePlaylist = (url) => {\n    return async (dispatch) => {\n        try {\n            const result = await get(url);\n            return dispatch(addPlaylist(result.playlists));\n        } catch (error) {\n            console.log('error', error);\n        }\n    };\n};","export default __webpack_public_path__ + \"static/media/music.b2fe7d4d.jpeg\";","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport _ from 'lodash'\nimport music from '../images/music.jpeg'\n\n\n\nconst AlbumsList = ({ albums }) => {\n    return (\n        <React.Fragment>\n            {Object.keys(albums).length > 0 && (\n                <div className=\"albums\">\n                    {albums.items.map((album, index) => {\n                        return (\n                            <React.Fragment key={index}>\n                                <Card className=\"cardStyle\" style={{ width: '18rem' }}>\n                                    <a\n                                        target=\"_blank\"\n                                        href={album.external_urls.spotify}\n                                        rel=\"noopener noreferrer\"\n                                        className=\"card-image-link\"\n                                    >\n                                        {!_.isEmpty(album.images) ? (\n                                            <Card.Img\n                                                variant=\"top\"\n                                                src={album.images[0].url}\n                                                alt=\"\"\n                                            />\n                                        ) : (\n                                            <img src={music} alt=\"\" />\n                                        )}\n                                    </a>\n                                    <Card.Body>\n                                        <Card.Title>{album.name}</Card.Title>\n                                        <Card.Text>\n                                            <small>\n                                                {album.artists.map((artist) => artist.name).join(', ')}\n                                            </small>\n                                        </Card.Text>\n                                    </Card.Body>\n                                </Card>\n                            </React.Fragment>\n                        )\n                    })}\n                </div>\n            )}\n        </React.Fragment>\n    )\n}\n\nexport default AlbumsList","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport _ from 'lodash';\nimport music from '../images/music.jpeg';\n\n\nconst ArtistsList = ({ artists }) => {\n    return (\n        <React.Fragment>\n            {Object.keys(artists).length > 0 && (\n                <div className=\"artists\">\n                    {artists.items.map((artist, index) => {\n                        return (\n                            <React.Fragment key={index}>\n                                <Card className=\"cardStyle\" style={{ width: '18rem' }}>\n                                    <a\n                                        target=\"_blank\"\n                                        href={artist.external_urls.spotify}\n                                        rel=\"noopener noreferrer\"\n                                        className=\"card-image-link\"\n                                    >\n                                        {!_.isEmpty(artist.images) ? (\n                                            <Card.Img\n                                                variant=\"top\"\n                                                src={artist.images[0].url}\n                                                alt=\"\"\n                                            />\n                                        ) : (\n                                            <img src={music} alt=\"\" />\n                                        )}\n                                    </a>\n                                    <Card.Body>\n                                        <Card.Title>{artist.name}</Card.Title>\n                                    </Card.Body>\n                                </Card>\n                            </React.Fragment>\n                        );\n                    })}\n                </div>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default ArtistsList;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\nimport _ from 'lodash';\nimport music from '../images/music.jpeg';\n\n\n\nconst PlayList = ({ playlist }) => {\n    return (\n        <div>\n            {Object.keys(playlist).length > 0 && (\n                <div className=\"playlist\">\n                    {playlist.items.map((item, index) => {\n                        return (\n                            <React.Fragment key={index}>\n                                <Card className=\"cardStyle\" style={{ width: '18rem' }}>\n                                    <a\n                                        target=\"_blank\"\n                                        href={item.external_urls.spotify}\n                                        rel=\"noopener noreferrer\"\n                                        className=\"card-image-link\"\n                                    >\n                                        {!_.isEmpty(item.images) ? (\n                                            <Card.Img variant=\"top\" src={item.images[0].url} alt=\"\" />\n                                        ) : (\n                                            <img src={music} alt=\"\" />\n                                        )}\n                                    </a>\n                                    <Card.Body>\n                                        <Card.Title>{item.name}</Card.Title>\n                                        <Card.Text>\n                                            <small>By {item.owner.display_name}</small>\n                                        </Card.Text>\n                                    </Card.Body>\n                                </Card>\n                            </React.Fragment>\n                        );\n                    })}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default PlayList;","import React from 'react';\nimport _ from 'lodash';\nimport { Button } from 'react-bootstrap';\nimport { Redirect } from 'react-router-dom';\nimport AlbumsList from './AlbumsList';\nimport ArtistsList from './ArtistsList';\nimport PlayList from './PlayList';\n\nconst SearchResult = (props) => {\n    const {\n        isValidSession,\n        loadMore,\n        result,\n        setCategory,\n        selectedCategory\n    } = props;\n    const { albums, artists, playlist } = result;\n\n    if (!isValidSession()) {\n        return (\n            <Redirect\n                to={{\n                    pathname: '/',\n                    state: {\n                        session_expired: true\n                    }\n                }}\n            />\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"search-buttons\">\n                {!_.isEmpty(albums.items) && (\n                    <button\n                        className={`${selectedCategory === 'albums' ? 'btn active' : 'btn'\n                            }`}\n                        onClick={() => setCategory('albums')}\n                    >\n                        Albums\n                    </button>\n                )}\n                {!_.isEmpty(artists.items) && (\n                    <button\n                        className={`${selectedCategory === 'artists' ? 'btn active' : 'btn'\n                            }`}\n                        onClick={() => setCategory('artists')}\n                    >\n                        Artists\n                    </button>\n                )}\n                {!_.isEmpty(playlist.items) && (\n                    <button\n                        className={`${selectedCategory === 'playlist' ? 'btn active' : 'btn'\n                            }`}\n                        onClick={() => setCategory('playlist')}\n                    >\n                        PlayLists\n                    </button>\n                )}\n            </div>\n            <div className={`${selectedCategory === 'albums' ? '' : 'hide'}`}>\n                {albums && <AlbumsList albums={albums} />}\n            </div>\n            <div className={`${selectedCategory === 'artists' ? '' : 'hide'}`}>\n                {artists && <ArtistsList artists={artists} />}\n            </div>\n            <div className={`${selectedCategory === 'playlist' ? '' : 'hide'}`}>\n                {playlist && <PlayList playlist={playlist} />}\n            </div>\n            {!_.isEmpty(result[selectedCategory]) &&\n                !_.isEmpty(result[selectedCategory].next) && (\n                    <div className=\"load-more\" onClick={() => loadMore(selectedCategory)}>\n                        <Button variant=\"info\" type=\"button\">\n                            Load More\n            </Button>\n                    </div>\n                )}\n        </React.Fragment>\n    );\n};\n\nexport default SearchResult;","import React, { useState } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport './SearchForm.css'\n\nconst SearchForm = (props) => {\n    const [searchTerm, setSearchTerm] = useState('');\n    const [errorMsg, setErrorMsg] = useState('');\n    const handleInputChange = (event) => {\n        const searchTerm = event.target.value;\n        setSearchTerm(searchTerm);\n    };\n    const handleSearch = (event) => {\n        event.preventDefault();\n        if (searchTerm.trim() !== '') {\n            setErrorMsg('');\n            props.handleSearch(searchTerm);\n        } else {\n            setErrorMsg('Please enter a search term.');\n        }\n    };\n    return (\n        <div>\n            <Form className=\"searchBar\" onSubmit={handleSearch}>\n                {errorMsg && <p className=\"errorMsg\">{errorMsg}</p>}\n                <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Enter search term</Form.Label>\n                    <Form.Control\n                        className=\"textInput\"\n                        type=\"search\"\n                        name=\"searchTerm\"\n                        value={searchTerm}\n                        placeholder=\"Search for album, artist, or playlist\"\n                        onChange={handleInputChange}\n                        autoComplete=\"off\"\n                    />\n                </Form.Group>\n                <Button className=\"searchButton\" variant=\"light\" type=\"submit\">\n                    Search\n                </Button>\n            </Form>\n        </div>\n    );\n};\nexport default SearchForm;","import { useState, useEffect } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Loader = (props) => {\n    const [node] = useState(document.createElement('div'))\n    const loader = document.querySelector('#loader')\n\n    useEffect(() => {\n        loader.appendChild(node).classList.add('message')\n    }, [loader, node])\n\n    useEffect(() => {\n        if (props.show) {\n            loader.classList.remove('hide')\n            document.body.classList.add('loader-open')\n        } else {\n            loader.classList.add('hide')\n            document.body.classList.remove('loader-open')\n        }\n    }, [loader, props.show])\n\n    return ReactDOM.createPortal(props.children, node)\n};\nexport default Loader","import React, { useState } from 'react';\n\nimport {\n    initiateGetResult,\n    initiateLoadMoreAlbums,\n    initiateLoadMorePlaylist,\n    initiateLoadMoreArtists\n} from '../actions/result';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport SearchResult from './SearchResult';\nimport SearchForm from './SearchForm';\nimport Header from './Header';\nimport Loader from './Loader';\n\nconst Dashboard = (props) => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [selectedCategory, setSelectedCategory] = useState('albums');\n    const { isValidSession, history } = props;\n\n    const handleSearch = (searchTerm) => {\n        if (isValidSession()) {\n            setIsLoading(true);\n            props.dispatch(initiateGetResult(searchTerm)).then(() => {\n                setIsLoading(false);\n                setSelectedCategory('albums');\n            });\n        } else {\n            history.push({\n                pathname: '/',\n                state: {\n                    session_expired: true\n                }\n            });\n        }\n    };\n\n    const loadMore = async (type) => {\n        if (isValidSession()) {\n            const { dispatch, albums, artists, playlist } = props;\n            setIsLoading(true);\n            switch (type) {\n                case 'albums':\n                    await dispatch(initiateLoadMoreAlbums(albums.next));\n                    break;\n                case 'artists':\n                    await dispatch(initiateLoadMoreArtists(artists.next));\n                    break;\n                case 'playlist':\n                    await dispatch(initiateLoadMorePlaylist(playlist.next));\n                    break;\n                default:\n            }\n            setIsLoading(false);\n        } else {\n            history.push({\n                pathname: '/',\n                state: {\n                    session_expired: true\n                }\n            });\n        }\n    };\n\n    const setCategory = (category) => {\n        setSelectedCategory(category);\n    };\n\n    const { albums, artists, playlist } = props;\n    const result = { albums, artists, playlist };\n\n    return (\n        <React.Fragment>\n            {isValidSession() ? (\n                <div>\n                    <Header />\n                    <SearchForm handleSearch={handleSearch} />\n                    <Loader show={isLoading}>Loading...</Loader>\n                    <SearchResult\n                        result={result}\n                        loadMore={loadMore}\n                        setCategory={setCategory}\n                        selectedCategory={selectedCategory}\n                        isValidSession={isValidSession}\n                    />\n                </div>\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: '/',\n                        state: {\n                            session_expired: true\n                        }\n                    }}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nconst mapStateToProps = (state) => {\n    return {\n        albums: state.albums,\n        artists: state.artists,\n        playlist: state.playlist\n    };\n};\n\nexport default connect(mapStateToProps)(Dashboard);","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Header from './Header'\n\nfunction PageNotFound() {\n    return (\n        <React.Fragment>\n            <Header />\n            Page not found. Go to <Link to=\"/dashboard\">Home Page</Link>\n        </React.Fragment>\n    )\n}\n\nexport default PageNotFound","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport Home from '../components/Home'\nimport RedirectPage from '../components/RedirectPage'\nimport Dashboard from '../components/Dashboard'\nimport PageNotFound from '../components/PageNotFound'\n\nclass AppRouter extends React.Component {\n    state = {\n        expiryTime: '0'\n    };\n\n    componentDidMount() {\n        let expiryTime;\n        try {\n            expiryTime = JSON.parse(localStorage.getItem('expiry_time'));\n        } catch (error) {\n            expiryTime = '0';\n        }\n        this.setState({ expiryTime });\n    }\n\n    setExpiryTime = (expiryTime) => {\n        this.setState({ expiryTime });\n    };\n\n    isValidSession = () => {\n        const currentTime = new Date().getTime();\n        const expiryTime = this.state.expiryTime;\n        const isSessionValid = currentTime < expiryTime;\n\n        return isSessionValid;\n    };\n\n    render() {\n        return (\n            <BrowserRouter>\n                <div className=\"main\">\n                    <Switch>\n                        <Route\n                            path=\"/spotify-music-search\"\n                            exact={true}\n                            render={(props) => (\n                                <Home isValidSession={this.isValidSession} {...props} />\n                            )}\n                        />\n                        <Route\n                            path=\"/spotify-music-search/redirect\"\n                            render={(props) => (\n                                <RedirectPage\n                                    isValidSession={this.isValidSession}\n                                    setExpiryTime={this.setExpiryTime}\n                                    {...props}\n                                />\n                            )}\n                        />\n                        <Route\n                            path=\"/spotify-music-search/dashboard\"\n                            render={(props) => (\n                                <Dashboard isValidSession={this.isValidSession} {...props} />\n                            )}\n                        />\n                        <Route component={PageNotFound} />\n                    </Switch>\n                </div>\n            </BrowserRouter>\n        )\n    }\n}\n\nexport default AppRouter;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store/store'\nimport AppRouter from './router/AppRouter'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './styles.css'\n\nReactDOM.render(\n    <Provider store={store}>\n        <AppRouter />\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}